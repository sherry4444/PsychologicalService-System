<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.dao.UserDao">


    <!--/*
    userId	int
    userName	varchar
    Password	varchar
    salt	varchar
    mobilePhone	varchar
    userEmail	varchar
    createTime	timestamp
    modifyTime	timestamp
    state	bit
    role	int
    */-->

    <resultMap type="com.test.domain.UserInfo" id="UserResultMap">
        <id column="userId" property="userId"/>
        <result column="userName" property="userName"/>
        <result column="Password" property="Password"/>
        <result column="salt" property="salt"/>
        <result column="mobilePhone" property="mobilePhone"/>
        <result column="userEmail" property="userEmail"/>
        <result column="createTime" property="createTime"/>
        <result column="modifyTime" property="modifyTime"/>
        <result column="state" property="state"/>
        <result column="role" property="role"/>
    </resultMap>

    <sql id="userColumns"> userId,userName,Password,salt,mobilePhone,userEmail,modifyTime,state,role </sql>
    <sql id="findByName"> userName,Password,salt,role</sql>

    <select id="finduserByName" resultMap="UserResultMap" parameterType="com.test.domain.UserInfo">
        SELECT <include refid="findByName"/> FROM ps_user WHERE userEmail=#{userEmail}
    </select>

    <insert id="addUser" parameterType="com.test.domain.UserInfo">
       insert into ps_user(userName,Password,userEmail,mobilePhone,salt,role) value(#{userName},#{Password},#{userEmail},#{mobilePhone},#{salt},#{role})
    </insert>

    <select id="finduserid" parameterType="com.test.domain.UserInfo" resultType="Integer">
        SELECT userId FROM ps_user WHERE Password=#{Password} AND userName=#{userName}
    </select>

    <select id="finduserAll" resultMap="UserResultMap" parameterType="java.util.Map" >
        SELECT <include refid="userColumns"/> FROM ps_user a
        <where>
            <if test="title != null">
                and a.userName like '%${title}%'
            </if>
        </where>
        GROUP BY a.userId
        <if test="flag == '4'.toString()">
            ORDER BY a.userId ASC
        </if>
        <if test="flag == '5'.toString()">
            ORDER BY a.userId DESC
        </if>
        <if test="flag == '2'.toString()">
            ORDER BY a.userName ASC
        </if>
        <if test="flag == '3'.toString()">
            ORDER BY a.userName DESC
        </if>
        <if test="flag == '1'.toString()">
            ORDER BY a.createTime ASC
        </if>
        <if test="flag == '0'.toString()">
            ORDER BY a.createTime DESC
        </if>
        <if test="flag == '6'.toString()">
            ORDER BY a.role ASC
        </if>
        <if test="flag == '7'.toString()">
            ORDER BY a.role DESC
        </if>
        limit #{page.dbIndex},#{page.dbNumber}
    </select>

    <select id="countUser" parameterType="java.lang.String" resultType="int">
        select count(*) from ps_user a
        <where>
            <if test="title != null">
                and a.userName like '%${title}%'
            </if>
        </where>
    </select>


    <delete id="deleteUser" parameterType="com.test.domain.UserInfo">
        DELETE FROM ps_user WHERE userId = #{userId}
    </delete>

    <update id="updateUser" parameterType="com.test.domain.UserInfo" >
        UPDATE ps_user
        <set>
            <trim prefix="" suffix="" prefixOverrides="" suffixOverrides=",">
                <if test="userName != null and userName.length > 0">
                    userName = #{userName},
                </if>
                <if test="userEmail != null and userEmail.length > 0">
                    userEmail = #{userEmail},
                </if>
                <if test="mobilePhone != null and mobilePhone.length > 0">
                    mobilePhone = #{mobilePhone},
                </if>
                <if test="role != null and role.length > 0">
                    role = #{role},
                </if>
            </trim>
        </set>
        WHERE userId = #{userId}
    </update>

    <update id="modifypassword" parameterType="com.test.domain.UserInfo">
        UPDATE ps_user
        <set>
            <trim prefix="" suffix="" prefixOverrides="" suffixOverrides=",">
                <if test="Password != null and Password.length > 0">
                    Password = #{Password}
                </if>
            </trim>
        </set>
        WHERE userEmail = #{userEmail}
    </update>

</mapper>
