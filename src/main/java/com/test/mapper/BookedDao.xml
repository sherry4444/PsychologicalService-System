<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.dao.BookedDao">


    <!--/*
    private	Integer	bookId;//预约ID
    private	String	bookState;//预约状态
    private	Integer	bookUserId;//预约者
    private	Integer	bebookedUserId;//被预约的老师
    private Timestamp bookTime;//预约时间
    private	String	bookReason;//预约原因
    private	String	feedback;//反馈信息
    private	Timestamp submitTime;//提交时间
    */-->


    <resultMap type="com.test.domain.Booked" id="BookedResultMap">
        <id column="bookId" property="bookId"/>
        <result column="bookState" property="bookState"/>
        <result column="bookUserId" property="bookUserId"/>
        <result column="bebookedUserId" property="bebookedUserId"/>
        <result column="bookTime" property="bookTime"/>
        <result column="bookReason" property="bookReason"/>
        <result column="feedback" property="feedback"/>
        <result column="submitTime" property="submitTime"/>
        <result column="studentName" property="bookUserName"/>
        <result column="teacherName" property="bebookedUserName"/>
    </resultMap>

    <sql id="linkColumns">a.bookState,a.bookUserId,a.bebookedUserId,a.bookTime,a.bookId,
        a.bookReason,a.feedback,a.submitTime,b.userName as studentName,
        d.userName as teacherName</sql>


    <select id="findbookedAll" resultMap="BookedResultMap" parameterType="java.util.Map" >
        SELECT <include refid="linkColumns"/> FROM ps_booked a
        LEFT JOIN ps_user b ON b.userId = a.bookUserId
        LEFT JOIN ps_user d ON d.userId = a.bebookedUserId
        <where>
            <if test="booked.bookState != null">
                and a.bookState = #{booked.bookState}
            </if>
            <if test="booked.bookUserId != null">
                and a.bookUserId = #{booked.bookUserId}
            </if>
            <if test="booked.bebookedUserId != null">
                and a.bebookedUserId = #{booked.bebookedUserId}
            </if>
            <if test="title != null and title.length() > 0">
                and a.bookReason like '%${title}%'
            </if>
            <if test="title != null and title.length() > 0">
                or a.feedback like '%${title}%'
            </if>
        </where>
        <if test="flag == '2'.toString()">
            ORDER BY a.bookState ASC
        </if>
        <if test="flag == '3'.toString()">
            ORDER BY a.bookState DESC
        </if>
        <if test="flag == '1'.toString()">
            ORDER BY a.submitTime ASC
        </if>
        <if test="flag == '0'.toString()">
            ORDER BY a.submitTime DESC
        </if>
        limit #{page.dbIndex},#{page.dbNumber}
    </select>

    <select id="countBooked" parameterType="java.util.Map" resultType="int">
        select COUNT(bookId) from ps_booked a
        LEFT JOIN ps_user b ON b.userId = a.bookUserId
        LEFT JOIN ps_user d ON d.userId = a.bebookedUserId
        <where>
            <if test="booked.bookState != null">
                and bookState = #{booked.bookState}
            </if>
            <if test="booked.bookUserId != null">
                and bookUserId = #{booked.bookUserId}
            </if>
            <if test="booked.bebookedUserId != null">
                and bebookedUserId = #{booked.bebookedUserId}
            </if>
            <if test="title != null and title.length() > 0">
                and a.bookReason like '%${title}%'
            </if>
            <if test="title != null and title.length() > 0">
                or a.feedback like '%${title}%'
            </if>
        </where>
    </select>

    <insert id="addBooked" parameterType="com.test.domain.Booked">
        INSERT INTO ps_booked(bookState,bookUserId,bebookedUserId,bookTime,bookReason,submitTime)
        VALUES (#{bookState},#{bookUserId},#{bebookedUserId},#{bookTime},#{bookReason},now())
    </insert>

    <delete id="deleteBooked" parameterType="com.test.domain.Booked">
        DELETE FROM ps_booked WHERE bookId = #{bookId}
    </delete>

    <update id="finishState" parameterType="com.test.domain.Booked" >
        UPDATE ps_booked
        SET bookState = 4
        WHERE bookState &lt; #{bookState} and bookUserId = #{bookUserId} and submitTime-now() &gt; 7
    </update>


    <update id="changeBookedState" parameterType="com.test.domain.Booked">
        UPDATE ps_booked
        <set>
            <if test="bookState != null">
                bookState = #{bookState},
            </if>
            <if test="feedback != null">
                feedback = #{feedback}
            </if>
        </set>
        WHERE bookId = #{bookId}
    </update>

    <select id="findhadfinish" parameterType="com.test.domain.Booked" resultType="int">
        SELECT COUNT(bookId) from ps_booked
        WHERE
        <if test="bookState != null">
            bookState &lt; #{bookState}
        </if>
        <if test="bookUserId != null">
            and bookUserId = #{bookUserId}
        </if>
    </select>

</mapper>
